---
export const prerender = true;

import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

function readingTime(text = '') {
  const words = text.trim().split(/\s+/).filter(Boolean).length;
  const mins = Math.max(1, Math.round(words / 200)); // ~200 wpm
  return `${mins} min`;
}

let posts = await getCollection('blog');

posts = posts
  .map((p) => {
    const dateObj = p.data.date ? new Date(p.data.date) : null;
    const formattedDate = dateObj
      ? dateObj.toLocaleDateString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })
      : '';

    // fallback excerpt from body (strip simple markdown)
    const excerpt =
      p.data.excerpt ??
      (p.body ? p.body.replace(/[#>*_`~\[\]\(\)\!\-]/g, '').slice(0, 180) : '');

    return {
      slug: p.slug,
      title: p.data.title,
      thumb: p.data.thumbnail,
      dateObj,
      formattedDate,
      excerpt,
      author: p.data.author ?? 'DoubleDown',
      tags: Array.isArray(p.data.tags) ? p.data.tags : [],
      read: readingTime(p.body || ''),
    };
  })
  .sort((a, b) => {
    const da = a.dateObj ? a.dateObj.getTime() : 0;
    const db = b.dateObj ? b.dateObj.getTime() : 0;
    return db - da;
  });
---
<BaseLayout>
  <title slot="title">Research & Insights</title>
  <!-- Head tags for canonical signals -->
  <Fragment slot="head">
    <link rel="canonical" href="https://doubledownbranding.com/blog/" />
    <meta property="og:url" content="https://doubledownbranding.com/blog/" />
  </Fragment>

  <style>
    :root {
      --ink: #0D1A5A;
      --paper: #f6e4cc;
      --accent: #ef3741;
      --card-bg: #fff;
      --muted: rgba(13,26,90,0.75);
      --border: rgba(13,26,90,0.15);
    }
    .hero {
      width: 100%;
      overflow: hidden;
      background: var(--paper);
    }
    .hero img { display:block; width:100%; height:auto; }

    .wrap { padding: 2rem 1rem 4rem; background: var(--paper); }
    .container { max-width: 1200px; margin: 0 auto; }

    .grid {
      display: grid;
      gap: 2rem;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }

    .card {
      display: grid;
      grid-template-rows: auto 1fr auto;
      background: var(--card-bg);
      border: 1px solid var(--border);
      border-radius: 10px;
      overflow: hidden;
      transition: transform .12s ease, box-shadow .12s ease, border-color .12s ease;
    }
    .card:hover, .card:focus-within {
      transform: translateY(-2px);
      border-color: rgba(13,26,90,0.28);
      box-shadow: 0 8px 22px rgba(13,26,90,0.12);
    }

    .thumb { aspect-ratio: 16/9; background: #ddd; overflow: hidden; }
    .thumb img { width:100%; height:100%; object-fit: cover; display:block; }

    .body { padding: 1rem 1rem 0.5rem; }
    .title {
      font-size: 1.15rem;
      line-height: 1.25;
      margin: 0 0 .35rem;
      color: var(--ink);
      font-weight: 800;
    }
    .meta {
      font-size: .9rem;
      color: var(--muted);
      display: flex;
      gap: .75rem;
      flex-wrap: wrap;
      margin: 0 0 .5rem;
    }

    .excerpt {
      color: var(--ink);
      line-height: 1.65;
      margin: 0 0 .75rem;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      min-height: 2.4em;
    }

    .tags { display:flex; gap:.5rem; flex-wrap: wrap; margin: 0 0 1rem; }
    .tag {
      font-size: .75rem;
      color: var(--ink);
      background: #fff5e8;
      border: 1px solid var(--border);
      border-radius: 999px;
      padding: .25rem .6rem;
      white-space: nowrap;
    }

    .footer {
      display:flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 1rem 1rem;
      gap: .75rem;
    }

    .link {
      display: inline-flex;
      align-items: center;
      gap: .35rem;
      color: var(--accent);
      text-decoration: none;
      font-weight: 700;
      outline: none;
    }
    .link:focus-visible { box-shadow: 0 0 0 3px rgba(239,55,65,0.35) inset; }

    @media (max-width: 1100px) {
      .wrap { padding-top: 1rem; }
    }
  </style>

  <!-- Header image -->
  <section class="hero" aria-label="Blog header">
    <img src="/images/uploads/blog-header.jpg" alt="Research & insights" loading="eager" />
  </section>

  <!-- Posts grid -->
  <section class="wrap">
    <div class="container">
      <div class="grid">
        {posts.map((p) => (
          <article class="card" itemscope itemtype="https://schema.org/BlogPosting">
            <a href={`/blog/${p.slug}/`} class="thumb" aria-label={`Read ${p.title}`}>
              {p.thumb
                ? <img src={p.thumb} alt={`${p.title} thumbnail`} loading="lazy" />
                : <img src="/images/uploads/blog-fallback.jpg" alt="" loading="lazy" />
              }
            </a>
            <div class="body">
              <h2 class="title" itemprop="headline">
                <a href={`/blog/${p.slug}/`} class="link" style="gap:0;text-decoration:none;color:inherit">{p.title}</a>
              </h2>
              <p class="meta">
                {p.formattedDate && <span><time datetime={p.dateObj?.toISOString()} itemprop="datePublished">{p.formattedDate}</time></span>}
                <span>{p.read} read</span>
                {p.author && <span>by {p.author}</span>}
              </p>
              {p.excerpt && <p class="excerpt" itemprop="description">{p.excerpt}</p>}
              {p.tags.length > 0 && (
                <div class="tags" aria-label="Tags">
                  {p.tags.slice(0, 4).map((t) => <span class="tag">{t}</span>)}
                </div>
              )}
            </div>
            <div class="footer">
              <a class="link" href={`/blog/${p.slug}/`} aria-label={`Read ${p.title}`}>Read article â†’</a>
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>
</BaseLayout>
