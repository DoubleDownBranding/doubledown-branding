---
import { getCollection, getEntryBySlug } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

// Pre-render this route and enumerate all blog slugs at build time
export const prerender = true;
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(({ slug }) => ({ params: { slug } }));
}

// Use params (not props) when resolving the current post
const { slug } = Astro.params;
const entry = await getEntryBySlug('blog', slug);

if (!entry) {
  Astro.response.status = 404;
  throw new Error(`Blog post not found: ${slug}`);
}

const { Content } = await entry.render();
const data = entry.data;

const dateObj = data?.date ? new Date(data.date) : null;
const formattedDate = dateObj
  ? dateObj.toLocaleDateString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })
  : '';
const dateISO = dateObj ? dateObj.toISOString() : '';
---

<BaseLayout>
  <title slot="title">{data.title || 'Blog post'}</title>

  <style>
    :root { --ink:#0D1A5A; --paper:#f6e4cc; --accent:#ef3741; }
    .wrap { padding: 3rem 1rem 5rem; background: var(--paper); }
    .container { max-width: 860px; margin: 0 auto; }
    .post-title { font-size: clamp(2rem, 5vw, 3rem); line-height: 1.1; margin: 0 0 .5rem; color: var(--ink); font-weight: 800; }
    .meta { color: rgba(13,26,90,.8); margin: 0 0 1.5rem; font-size: .95rem; }
    .hero { margin: 0 0 1.5rem; border-radius: 4px; overflow: hidden; background: #fff; border: 1px solid rgba(13,26,90,.12); }
    .hero img { display:block; width:100%; height:auto; }
    .content :where(p, ul, ol, blockquote, pre, table, h2, h3, h4, img){ margin: 0 0 1.15rem; }
    .content p { line-height: 1.85; font-size: 1.1rem; color: var(--ink); }
    .content h2 { font-size: clamp(1.4rem, 3.5vw, 2rem); margin-top: 2rem; color: var(--ink); }
    .content h3 { font-size: clamp(1.2rem, 3vw, 1.5rem); margin-top: 1.25rem; color: var(--ink); }
    .content ul, .content ol { padding-left: 1.25rem; line-height: 1.75; }
    .content a { color: var(--accent); text-decoration: underline; text-underline-offset: 2px; }
    .content pre { padding: 1rem; background: #fff; border: 1px solid rgba(13,26,90,.15); border-radius: 4px; overflow: auto; }
    .back { display:inline-block; margin-top:1.5rem; color:var(--accent); text-decoration:none; font-weight:700; border-bottom:2px solid transparent; }
    .back:hover, .back:focus-visible { border-bottom-color: var(--accent); outline: none; }
  </style>

  <main id="main" class="wrap">
    <article class="container" itemscope itemtype="https://schema.org/Article">
      <h1 class="post-title" itemprop="headline">{data.title}</h1>

      {formattedDate && (
        <p class="meta">
          <time datetime={dateISO} itemprop="datePublished">{formattedDate}</time>
        </p>
      )}

      {data.thumbnail && (
        <div class="hero">
          <img src={data.thumbnail} alt={`${data.title} header image`} loading="eager" />
        </div>
      )}

      <div class="content" itemprop="articleBody">
        <Content />
      </div>

      <a href="/blog" class="back" aria-label="Back to blog">Back to Blog</a>
    </article>
  </main>
</BaseLayout>
